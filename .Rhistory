knitr::opts_chunk$set(echo = F,warning = F,message = F, fig.width = 4, fig.height = 3,fig.align = "center",tidy = FALSE, strip.white = TRUE)
library(RTL)
library(plotly)
library(dplyr)
library(ggplot2)
library(tidyr)
library(purrr)
library(scales)
#Morningstar API Login
iuser = "morningstar.ctrd@ualberta.ca"
ipassword = "oRakvwtPVg"
EIAkey = "7658ca55759776ff3116f4e3e927948e"
#Extracting the March and April Contracts
df <- RTL::getPrices(
feed = "CME_NymexFutures_EOD",
contracts = c("@HO22H","@HO22J","@CL22H","@CL22J"),
from = "2010-01-01",
iuser = iuser,
ipassword = ipassword)
#Extracting the 1st and 2nd Contracts
df2 <- RTL::getPrices(
feed = "CME_NymexFutures_EOD_continuous",
contracts = c("HO_001_Month","HO_002_Month","CL_001_Month","CL_002_Month"),
from = "2010-01-01",
iuser = iuser,
ipassword = ipassword)
#Joining the Data Frames, converting to barrels, and calculating spreads
HOdf <- dplyr::inner_join(df,df2) %>%
dplyr::arrange(dplyr::desc(date)) %>%
stats::na.omit()%>%
dplyr::transmute(date = date,
HO_01 = HO_001_Month * 42,
HO_02 = HO_002_Month * 42,
CL_01 = CL_001_Month,
CL_02 = CL_002_Month,
HO22H = HO22H * 42,
HO22J = HO22J * 42,
CL22H = CL22H,
CL22J = CL22J,
HO_Current_Crack = HO_01 - CL_01,
HO_c1c2_Spd = HO_01 - HO_02,
HO_Apr22_Mar22_Spd = HO22H - HO22J,
HO_Crack_Spd = HO22H - CL22H) %>%
#Converting from wide to long
tidyr::pivot_longer(-date, values_to = "Price", names_to = "Contracts")
#Plotting flat price for 1st and 2nd contracts
HOdf %>%
dplyr::filter(stringr::str_detect(Contracts, "_0")) %>%
plotly::plot_ly(
width = 700, height = 400,
x = ~date,
y = ~Price,
name = ~ Contracts,
type = 'scatter',
mode = 'lines'
) %>%
plotly::layout(
title = "Flat Price USLD vs. WTI", x = 0,
xaxis = list(title = "Date"),
yaxis = list(
title = "$ per Barrel")
)
#Plotting Current Crack Spread
HOdf %>%
dplyr::filter(stringr::str_detect(Contracts, "Current_Crack")) %>%
plotly::plot_ly(
width = 700, height = 400,
x = ~date,
y = ~Price,
name = ~Contracts
) %>%
plotly::add_lines() %>%
plotly::layout(
title = "Current ULSD Crack Spread", x = 0,
xaxis = list(title = "Date"),
yaxis = list(
title = "$ per Barrel")
)
#Time spread 1st and 2nd contracts for ULSD
HOdf %>%
dplyr::filter(stringr::str_detect(Contracts, "c1c2")) %>%
plotly::plot_ly(
width = 700, height = 400,
x = ~date,
y = ~Price,
name = ~Contracts
) %>%
plotly::add_lines() %>%
plotly::layout(
title = "Time Spread: HO_01 vs HO_02", x = 0,
xaxis = list(title = "Date"),
yaxis = list(
title = "$ per Barrel")
)
#Plotting flat price for March and April contracts
HOdf %>%
dplyr::filter(stringr::str_detect(Contracts, c("2H", "2J")))%>%
plotly::plot_ly(
width = 700, height = 400,
x = ~date,
y = ~Price,
name = ~ Contracts,
type = 'scatter',
mode = 'lines'
) %>%
plotly::layout(
title = "Flat Price March & April Contracts", x = 0,
xaxis = list(title = "Date"),
yaxis = list(
title = "$ per Barrel")
)
#Crack spread between ULSD and WTI
HOdf %>%
dplyr::filter(stringr::str_detect(Contracts, "Crack_S")) %>%
plotly::plot_ly(
width = 700, height = 400,
x = ~date,
y = ~Price,
name = ~Contracts
) %>%
plotly::add_lines() %>%
plotly::layout(
title = "ULSD Crack Spread: WTI March 2022", x = 0,
xaxis = list(title = "Date"),
yaxis = list(
title = "$ per Barrel")
)
#Time spread for March and April ULSD contracts
HOdf %>%
dplyr::filter(stringr::str_detect(Contracts, "Apr")) %>%
plotly::plot_ly(
width = 700, height = 400,
x = ~date,
y = ~Price,
name = ~Contracts
) %>%
plotly::add_lines() %>%
plotly::layout(
title = "Time Spread: March and April 2022", x = 0,
xaxis = list(title = "Date"),
yaxis = list(
title = "$ per Barrel")
)
#Implied storage builds and draws
library(RTL)
data("tickers_eia")
sd <- tickers_eia %>% dplyr::filter(sd_category == "dist", category != "stocks") %>%
dplyr::as_tibble()
eia_df <- tibble::tribble(~ticker, ~name) %>%
add_row(ticker = sd$tick.eia[1:nrow(sd)], name = sd$tick.r[1:nrow(sd)]) %>%
dplyr::mutate(key = EIAkey) %>%
dplyr::mutate(df = purrr::pmap(list(ticker, key, name), .f = RTL::eia2tidy)) %>%
dplyr::select(df) %>% tidyr::unnest(df)
?pmap
rlang::last_error()
?eia2tidy
